library("rattle", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
dir()
dir()
View(data1)
View(data1)
data1 <- read.csv("/Users/janardhanbonu/OneDrive/MUM/datamining/rawdata/Divvy_Stations_Trips_2014-Q1Q2/Divvy_Trips_20140630.csv")
divvydata <- read.csv("/Users/janardhanbonu/OneDrive/MUM/datamining/rawdata/Divvy_Stations_Trips_2014-Q1Q2/Divvy_Trips_2014_Q1Q2.csv")
names(divvydata)
divvysample <- sample(1:905699, 10000)
divvysample
data(divvysample)
head(divvysample)
divvydata[divvysample]
data(divvysample)
data(divvydadta)
data(divvydata)
View(divvydata)
View(divvydata)
View(divvydata)
nrows(divvydata)
nrow(divvydata)
# splitdf function will return a list of training and testing sets
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)/2))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
splits <- splitdf(divvydata, seed=20000)
str(splits)
lapply(splits,nrow)
splitdf <- function(dataframe, seed=NULL) {
if (!is.null(seed)) set.seed(seed)
index <- 1:nrow(dataframe)
trainindex <- sample(index, trunc(length(index)/10))
trainset <- dataframe[trainindex, ]
testset <- dataframe[-trainindex, ]
list(trainset=trainset,testset=testset)
}
splits <- splitdf(divvydata, seed=10000)
lapply(splits,nrow)
training <- splits$trainset
testing <- splits$testset
View(testing)
View(training)
nrow(testing)
nrow(training)
testdata <- training
testdata2$starttime <- strptime(testdata2$starttime,"%m/%d/%Y %H:%M")
testdata2$stoptime <- strptime(testdata2$stoptime,"%m/%d/%Y %H:%M")
testdata$starttime <- strptime(testdata$starttime,"%m/%d/%Y %H:%M")
testdata$stoptime <- strptime(testdata$stoptime,"%m/%d/%Y %H:%M")
view(testdata)
View(testdata)
View(training)
View(testdata)
attach(testdata)
weekdays
weekdays(testdata.starttime)
View(testdata)
weekdays(testdata$starttime)
View(testdata)
testdata$weekday <- weekdays(testdata$starttime)
View(testdata)
testdata$month <- weekdays(testdata$starttime)
View(testdata)
testdata$month <- months(testdata$starttime)
View(testdata)
View(testdata$month)
strptime
season <- function(month){
if(month == "December|January|February) {
sn <- "Winter"
} else if(month == "March|April|May) {
sn <- "Spring"
} else if(month == "June|July|August) {
sn <- "Summer"
} else if(month == "September|October|November) {
sn <- "Fall"
}
return sn
}
season <- function(month){
if(month == "December|January|February") {
sn <- "Winter"
} else if(month == "March|April|May") {
sn <- "Spring"
} else if(month == "June|July|August") {
sn <- "Summer"
} else if(month == "September|October|November") {
sn <- "Fall"
}
return sn
}
season <- function(month){
if(month == "December|January|February") {
sn <- "Winter"
} else if(month == "March|April|May") {
sn <- "Spring"
} else if(month == "June|July|August") {
sn <- "Summer"
} else if(month == "September|October|November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
season <- function(month){
if(month == "December" | month == "January" | month == "February") {
sn <- "Winter"
} else if(month == "March" | month == "April" | month == "May") {
sn <- "Spring"
} else if(month == "June" | month == "July" | month == "August") {
sn <- "Summer"
} else if(month == "September" | month == "October" | month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
season <- function(month){
if(month == "December" || month == "January" || month == "February") {
sn <- "Winter"
} else if(month == "March" || month == "April" || month == "May") {
sn <- "Spring"
} else if(month == "June" || month == "July" || month == "August") {
sn <- "Summer"
} else if(month == "September" || month == "October" || month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
View(testdata)
season <- function(month){
if(month == "December" || month == "January" || month == "February") {
sn <- "Winter"
}
if(month == "March" || month == "April" || month == "May") {
sn <- "Spring"
}
if(month == "June" || month == "July" || month == "August") {
sn <- "Summer"
}
if(month == "September" || month == "October" || month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
View(testdata)
View(testdata)
season <- function(month){
if(month == "December" || month == "January" || month == "February") {
sn <- "Winter"
}
if(month == "March" || month == "April" || month == "May") {
sn <- "Spring"
}
if(month == "June" || month == "July" || month == "August") {
sn <- "Summer"
}
if(month == "September" || month == "October" || month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
View(testdata)
View(testdata)
season <- function(month){
sn <- "Winter"
return(sn)
}
testdata$season <- season(testdata$month)
View(testdata)
season <- function(month){
if(month == "December") {
sn <- "Winter"
}
if(month == "January") {
sn <- "Winter"
}
if(month == "February") {
sn <- "Winter"
}
if(month == "March") {
sn <- "Spring"
}
if(month == "April") {
sn <- "Spring"
}
if(month == "May") {
sn <- "Spring"
}
if(month == "June") {
sn <- "Summer"
}
if(month == "July") {
sn <- "Summer"
}
if(month == "August") {
sn <- "Summer"
}
if(month == "September") {
sn <- "Fall"
}
if(month == "October")  {
sn <- "Fall"
}
if(month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
season <- function(month){
if(month == "December") {
sn <- "Winter"
}
if(month == "January") {
sn <- "Winter"
}
if(month == "February") {
sn <- "Winter"
}
if(month == "March") {
sn <- "Spring"
}
if(month == "April") {
sn <- "Spring"
}
if(month == "May") {
sn <- "Spring"
}
if(month == "June") {
sn <- "Summer"
}
if(month == "July") {
sn <- "Summer"
}
if(month == "August") {
sn <- "Summer"
}
if(month == "September") {
sn <- "Fall"
}
if(month == "October")  {
sn <- "Fall"
}
if(month == "November") {
sn <- "Fall"
}
return(sn)
}
warinings()
warnings()
View(testdata)
View(testdata)
season()
season
season <- function(dataframe){
if(dataframe$month == "December") {
sn <- "Winter"
}
if(dataframe$month == "January") {
sn <- "Winter"
}
if(dataframe$month == "February") {
sn <- "Winter"
}
if(dataframe$month == "March") {
sn <- "Spring"
}
if(dataframe$month == "April") {
sn <- "Spring"
}
if(dataframe$month == "May") {
sn <- "Spring"
}
if(dataframe$month == "June") {
sn <- "Summer"
}
if(dataframe$month == "July") {
sn <- "Summer"
}
if(dataframe$month == "August") {
sn <- "Summer"
}
if(dataframe$month == "September") {
sn <- "Fall"
}
if(dataframe$month == "October")  {
sn <- "Fall"
}
if(dataframe$month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata$month)
season <- function(dataframe){
if(dataframe$month == "December") {
sn <- "Winter"
}
if(dataframe$month == "January") {
sn <- "Winter"
}
if(dataframe$month == "February") {
sn <- "Winter"
}
if(dataframe$month == "March") {
sn <- "Spring"
}
if(dataframe$month == "April") {
sn <- "Spring"
}
if(dataframe$month == "May") {
sn <- "Spring"
}
if(dataframe$month == "June") {
sn <- "Summer"
}
if(dataframe$month == "July") {
sn <- "Summer"
}
if(dataframe$month == "August") {
sn <- "Summer"
}
if(dataframe$month == "September") {
sn <- "Fall"
}
if(dataframe$month == "October")  {
sn <- "Fall"
}
if(dataframe$month == "November") {
sn <- "Fall"
}
return(sn)
}
testdata$season <- season(testdata)
View(testdata)
testdata$season <- season(testdata)
warnings()
testdata$season[testdata$month=="June"] <- "Summer"
View(testdata)
testdata$season[testdata$month=="January"] <- "Winter"
testdata$season[testdata$month=="February"] <- "Winter"
testdata$season[testdata$month=="March"] <- "Spring"
testdata$season[testdata$month=="April"] <- "Spring"
testdata$season[testdata$month=="May"] <- "Spring"
testdata$season[testdata$month=="June"] <- "Summer"
testdata$season[testdata$month=="July"] <- "Summer"
testdata$season[testdata$month=="August"] <- "Summer"
testdata$season[testdata$month=="September"] <- "Fall"
testdata$season[testdata$month=="October"] <- "Fall"
testdata$season[testdata$month=="November"] <- "Fall"
testdata$season[testdata$month=="December"] <- "Winter"
View(testdata)
testdata$hour <- format(testdata$starttime,"%H")
View(testdata)
testdata$stationpair <- paste(testdata$from_station_name,testdata$to_station_name)
View(testdata)
testdata$stationpair <- paste(testdata$from_station_name,"&&",testdata$to_station_name)
View(testdata)
detach(testdata)
attach(testdata)
pie(table(usertype))
text(table(usertype))
pie(table(usertype))
percent <- round(summary(testdata$usertype) * 100 / nrow(testdata))
labels <- sprintf("%s (%d%%)", levels(testdata$usertype), percent)
pie(summary(testdata$usertype), lab=labels)
percent <- round(summary(testdata$hours) * 100 / nrow(testdata))
labels <- sprintf("%s (%d%%)", levels(testdata$hours), percent)
pie(summary(testdata$hours), lab=labels)
percent <- round(summary(testdata$hour) * 100 / nrow(testdata))
labels <- sprintf("%s (%d%%)", levels(testdata$hour), percent)
pie(summary(testdata$hour), lab=labels)
summary(testdata$hour)
percent <- round(summary(testdata$usertype) * 100 / nrow(testdata))
labels <- sprintf("%s (%d%%)", levels(testdata$usertype), percent)
percent <- round(summary(testdata$hour) * 100 / nrow(testdata))
summary(testdata$hour)
summary(testdata$usertype)
percent <- round(summary(testdata$weekday) * 100 / nrow(testdata))
labels <- sprintf("%s (%d%%)", levels(testdata$weekday), percent)
pie(summary(testdata$weekday), lab=labels)
pie(table(weekday))
pie(table(hour))
bar(table(hour))
plot(density(starttime))
barplot(table(hour))
barplot(table(month))
barplot(table(season))
barplot(table(testdata$season))
barplot(table(testdata$weekday))
summary(testdata$from_station_name)
summary(testdata$stationpair)
testdata$stationpair <- as.factor(testdata$stationpair)
summary(testdata$stationpair)
barplot(table(stationpair))
names(testdata)
summary(hour)
summary(stationpair)
summary(testdata$stationpair)
summary(testdata$hour)
testdata$stationpair <- as.factor(testdata$hour)
summary(testdata$hour)
names(testdata)
barplot(as.matrix(testdata[,16:17])beside=TRUE, legend=testdata$stationpair, col=heat.color(24), border="White")
barplot(as.matrix(testdata[,16:17]), beside=TRUE, legend=testdata$stationpair, col=heat.color(24), border="White")
install.packages("colorspace")
library(colorspace)
barplot(as.matrix(testdata[,16:17]), beside=TRUE, legend=testdata$stationpair, col=heat.color(24), border="White")
library(RColorBrewer)
install.packages("RColorBrewer")
library(RColorBrewer)
barplot(as.matrix(testdata[,16:17]), beside=TRUE, legend=testdata$stationpair, col=heat.color(24), border="White")
barplot(as.matrix(testdata[,16:17]), beside=TRUE, legend=testdata$stationpair, col=heat.colors(24), border="White")
counts <- table(testdata$hour, testdata$stationpair)
barplot(counts, main="This is main line", xlab="This is xlabel" col=heat.colors(24), border="white")
barplot(counts, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
counts <- table(testdata$stationpair, testdata$hour)
barplot(counts, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
counts <- table(testdata$stationpair, testdata$hour)
barplot(counts, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
counts <- table(testdata$stationpair)
barplot(counts, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
barplot(counts, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
counts1 <- table(testdata$stationpair)
barplot(counts1, main="This is main line", xlab="This is xlabel", col=heat.colors(24), border="white")
barplot
barplot(testdata$stationpair)
barplot(testdata$stationpair))
barplot(table(testdata$stationpair))
barplot(table(testdata$hour))
barplot(table(testdata$season))
barplot(table(testdata$hour))
barplot(table(testdata$stationpair))
barplot(as.matrix(testdata[,16:17]), main="This is main line", xlab="This is xlabel", col=heat.colors(12), border="white")
barplot(as.matrix(testdata[,13:14]), main="This is main line", xlab="This is xlabel", col=heat.colors(12), border="white")
summary(testdata)
summary(testdata)
testdata$hour <- as.numeric(testdata$hour)
summary(testdata)
testdata$season <- as.factor(testdata$season)
summary(testdata)
testdata$month <- as.factor(testdata$month)
testdata$weekday <- as.factor(testdata$weekday)
barplot(as.matrix(testdata[,13:14]), main="This is main line", xlab="This is xlabel", col=heat.colors(12), border="white")
summary(testdata)
barplot(as.matrix(testdata[,13:14]), main="This is main line", xlab="This is xlabel", col=heat.colors(12), border="white")
names(testdata)
barplot(as.matrix(testdata[,14:15]), main="This is main line", xlab="This is xlabel", col=heat.colors(12), border="white")
barplot(as.matrix(testdata[,14:15]), main="This is main line", xlab="This is xlabel", col=heat.colors(2), border="white")
barplot(as.matrix(testdata[,14:15]), main="This is main line", xlab="This is xlabel", col=heat.colors(3), border="white")
barplot(table(hour))
barplot(table(bikeid))
barplot(as.matrix(testdata[,c(hour,stationpair)]), main="This is main line", xlab="This is xlabel", col=heat.colors(3), border="white")
barplot(as.matrix(testdata[,c("hour","stationpair")]), main="This is main line", xlab="This is xlabel", col=heat.colors(3), border="white")
plot(testdata$hours,testdata$starttime)
plot(testdata$hours,testdata$month)
plot(testdata)
plot(testdata$hours, testdata$starttime)
summary(testdata)
plot(testdata$hours, testdata$starttime)
plot(as.factor(testdata$starttime), testdata$hour )
plot(testdata$starttime, testdata$hour )
plot(testdata$starttime, testdata$hour)
dev.off()
plot(testdata$starttime, testdata$hour)
gplot(testdata$starttime, testdata$hour)
install.packages("gplots")
gplot(testdata$starttime, testdata$hour)
gplots(testdata$starttime, testdata$hour)
rv <- seq(1.3, 2.9, .1)
rv <- rv[-grep("1.6", rv)] # remove R version 1.6
pckg.num <- c(110,129,162,219,273,357,406,548,647,739,911,1000,1300,1427,1614,1952)
rv.dates <- c("2001-6-21", "2001-12-17","2002-06-12","2003-05-27",
"2003-11-16","2004-06-05","2004-10-12","2005-06-18","2005-12-16", "2006-05-31",
"2006-12-12","2007-04-12","2007-11-16","2008-03-18","2008-10-18","2009-09-17")
pckg.fit <- lm(pckg.num~rv)
png("CRAN_packages.png")
par(mar=c(7, 5, 5, 3), las=2)
plot(as.POSIXct(rv.dates), pckg.num, xlab="",ylab="",col="red", log="y", pch=19, axes=F)
axis.POSIXct(1, 1:16, rv.dates, format="%Y-%m-%d")
mtext("Date", side=1, line=5, las=1)
axis(2, at=c(100,200,300,400,500,600,800,100,1200,1500,2000))
mtext("Number of CRAN Packages", side=2, line=3, las=3)
axis.POSIXct(3, rv.dates, rv.dates, labels=as.character(rv))
mtext("R Version", side=3, line=3, las=1)
axis(4, pckg.num)
abline(v=as.POSIXct(rv.dates), col="lightgray", lty="dashed")
abline(h=pckg.num, col="lightgray", lty="dashed")
box()
abline(lm(log10(pckg.num)~as.POSIXct(rv.dates)), col="red")
dev.off()
plot(testdata$bikeid)
plot(testdata$trip_id)
plot(testdata$trip_id, type="1")
plot(testdata$trip_id, type="b")
hist(testdata$hour, freq=F)
curve(dnorm(x, mean(testdata$hour), sd(testdata$hour)), add=T)
qnorm(testdata$hour)
qqnorm(testdata$hour)
qline(testdata$hour)
qqline(testdata$hour)
barplot(table(testdata$hour, testdata$weekday), legend.text=T)
savehistory("~/OneDrive/MUM/datamining/DivvyFinal.Rhistory")
divvydata$stationpair <- paste(divvydata$from_station_name,"&&",divvydata$to_station_name)
